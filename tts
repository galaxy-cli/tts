#!/bin/bash
#       | |_| |_ ___
#       | __| __/ __|
#       | |_| |_\__ \
#        \__|\__|___|
# tts - Simple text-to-speech utility using Festival and optional GPT integration
# Author: galaxy-cli
# Project: https://github.com/galaxy-cli/tts

# --- Dependency Check & Install Section ---

missing=()

for cmd in festival xsel; do
    command -v "$cmd" >/dev/null 2>&1 || missing+=("$cmd")
done

# Check for tgpt (special case: directory and command)
if ! command -v tgpt >/dev/null 2>&1; then
    missing+=("tgpt")
fi

if [ "${#missing[@]}" -gt 0 ]; then
    echo "The following dependencies are missing: ${missing[*]}"
    read -p "Do you want to install them now? [Y/n] " yn
    yn=${yn:-Y}
    if [[ $yn =~ ^[Yy]$ ]]; then
        sudo apt update
        # Install system packages
        for pkg in festival xsel; do
            if [[ " ${missing[*]} " == *" $pkg "* ]]; then
                sudo apt install -y "$pkg"
            fi
        done
        # Install tgpt if missing
        if [[ " ${missing[*]} " == *" tgpt "* ]]; then
            if [ -d tgpt ]; then
                echo "tgpt directory already exists. Skipping clone."
            else
                git clone https://github.com/aandrew-me/tgpt.git
                sh tgpt/install
            fi
        fi
    else
        echo "Cannot continue without required dependencies."
        exit 1
    fi
fi

# --- Main Script Section ---

# Edit Festival speed by changing Duration_Stretch in:
# /usr/share/festival/voices/english/kal_diphone/festvox/kal_diphone.scm
# Line 265: (Parameter.set 'Duration_Stretch 0.8)

print_usage() {
    cat <<EOF
USAGE
  tts -x           Speak clipboard contents
  tts -o FILE      Speak contents of FILE
  tts -e           Speak user input (one line)
  tts -t           Speak output from tgpt

FLAGS
  -x    Use clipboard (xsel)
  -o    Open and speak a file
  -e    Echo user input
  -t    Use tgpt output
EOF
}

# Stores temporary script files in /tmp/
tmpfile=$(mktemp /tmp/tts.XXXXXX)
trap 'rm -f "$tmpfile"' INT EXIT

speak_clipboard() {
    xsel | festival --tts
}
speak_file() {
    festival --tts < "$1"
}
speak_input() {
    read -r tts
    echo "$tts" | festival --tts
}
speak_tgpt() {
    tgpt > "$tmpfile"
    festival --tts "$tmpfile"
}

case "${1:-}" in
    -x) speak_clipboard ;;
    -o) speak_file "${2:-}" ;;
    -e) speak_input ;;
    -t) speak_tgpt ;;
    *)  print_usage; exit 0 ;;
esac
